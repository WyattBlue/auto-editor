'''scripts/premiere.py'''

"""
This script's purpose is to export an XML file that can be imported by Adobe Premiere.

It doesn't support zooming in yet.
"""

# External libraries
import cv2

# Included functions
from scripts.usefulFunctions import getAudioChunks
from scripts.wavfile import read, write

# Internal libraries
import os
import sys
import tempfile
import subprocess
from shutil import rmtree
from datetime import timedelta

def exportToPremiere(myInput, newOutput, silentT, zoomT, frameMargin, sampleRate,
    videoSpeed, silentSpeed):
    print('Running from premiere.py')
    TEMP = tempfile.mkdtemp()

    cap = cv2.VideoCapture(myInput)
    fps = round(cap.get(cv2.CAP_PROP_FPS))

    cmd = ['ffmpeg', '-i', myInput, '-ab', '160k', '-ac', '2', '-ar',
        str(sampleRate), '-vn', f'{TEMP}/output.wav', '-nostats', '-loglevel', '0']
    subprocess.call(cmd)

    sampleRate, audioData = read(f'{TEMP}/output.wav')
    chunks = getAudioChunks(audioData, sampleRate, fps, silentT, zoomT, frameMargin)
    rmtree(TEMP)

    clips = []
    for chunk in chunks:
        if(chunk[2] == 1):
            clips.append([chunk[0], chunk[1]])


    if(len(clips) < 2):
        print('Error! Less than 2 clips.')
        sys.exit()

    print('\nWarning, this code is very underdeveloped and does not support many features.')

    print('\nDev Info\n========')

    print(chunks)
    print('clips:')
    print(clips)
    pathurl = 'file://localhost' + os.path.abspath(myInput)
    print('pathurl:', pathurl)
    name = os.path.basename(myInput)
    print('video name:', name)

    ntsc = 'TRUE'
    ana = 'FALSE' # anamorphic
    alphatype = 'none'
    depth = '16'
    width = '1280'
    height = '720'
    pixelar = 'square' # pixel aspect ratio
    colordepth = '24'
    fps = '30' # aka timebase
    sr = sampleRate


    with open('export.xml', 'w', encoding='utf-8') as outfile:
        outfile.write('<!-- Generated by Auto-Editor -->\n')
        outfile.write('<!-- https://github.com/WyattBlue/auto-editor -->\n')
        outfile.write('\n')
        outfile.write('<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE xmeml>\n')
        outfile.write('<xmeml version="4">\n')
        outfile.write('\t<sequence>\n')
        outfile.write('\t\t<name>auto-editor export group</name>\n')
        outfile.write('\t\t<media>\n')
        outfile.write('\t\t\t<video>\n')
        outfile.write('\t\t\t\t<format>\n')
        outfile.write('\t\t\t\t\t<samplecharacteristics>\n')
        outfile.write('\t\t\t\t\t\t<rate>\n')
        outfile.write('\t\t\t\t\t\t\t<timebase>30</timebase>\n')
        outfile.write(f'\t\t\t\t\t\t\t<ntsc>{ntsc}</ntsc>\n')
        outfile.write('\t\t\t\t\t\t</rate>\n')
        outfile.write(f'\t\t\t\t\t\t<width>{width}</width>\n')
        outfile.write(f'\t\t\t\t\t\t<height>{height}</height>\n')
        outfile.write(f'\t\t\t\t\t\t<anamorphic>{ana}</anamorphic>\n')
        outfile.write(f'\t\t\t\t\t\t<pixelaspectratio>{pixelar}</pixelaspectratio>\n')
        outfile.write('\t\t\t\t\t\t<fielddominance>none</fielddominance>\n')
        outfile.write(f'\t\t\t\t\t\t<colordepth>{colordepth}</colordepth>\n')
        outfile.write('\t\t\t\t\t</samplecharacteristics>\n')
        outfile.write('\t\t\t\t</format>\n')
        outfile.write('\t\t\t\t<track>\n')

        # handle first clip.
        for j, clip in enumerate(clips):
            if(j == 0):
                outfile.write(f'\t\t\t\t\t<clipitem id="clipitem-{j+7}">\n')
                outfile.write('\t\t\t\t\t\t<masterclipid>masterclip-2</masterclipid>\n')
                outfile.write(f'\t\t\t\t\t\t<name>{name}</name>\n')
                outfile.write(f'\t\t\t\t\t\t<start>{clip[0]}</start>\n')
                outfile.write(f'\t\t\t\t\t\t<end>{clip[1]}</end>\n')
                outfile.write(f'\t\t\t\t\t\t<in>{clip[0]}</in>\n')
                outfile.write(f'\t\t\t\t\t\t<out>{clip[1]}</out>\n')
                outfile.write('\t\t\t\t\t\t<file id="file-2">\n')
                outfile.write(f'\t\t\t\t\t\t\t<name>{name}</name>\n')
                outfile.write(f'\t\t\t\t\t\t\t<pathurl>{pathurl}</pathurl>\n')
                outfile.write('\t\t\t\t\t\t\t<rate>\n')
                outfile.write(f'\t\t\t\t\t\t\t\t<timebase>{fps}</timebase>\n')
                outfile.write(f'\t\t\t\t\t\t\t\t<ntsc>{ntsc}</ntsc>\n')
                outfile.write('\t\t\t\t\t\t\t</rate>\n')
                outfile.write('\t\t\t\t\t\t\t<media>\n')
                outfile.write('\t\t\t\t\t\t\t\t<video>\n')
                outfile.write('\t\t\t\t\t\t\t\t\t<samplecharacteristics>\n')
                outfile.write('\t\t\t\t\t\t\t\t\t\t<rate>\n')
                outfile.write(f'\t\t\t\t\t\t\t\t\t\t\t<timebase>{fps}</timebase>\n')
                outfile.write(f'\t\t\t\t\t\t\t\t\t\t\t<ntsc>{ntsc}</ntsc>\n')
                outfile.write('\t\t\t\t\t\t\t\t\t\t</rate>\n')
                outfile.write(f'\t\t\t\t\t\t\t\t\t\t<width>{width}</width>\n')
                outfile.write(f'\t\t\t\t\t\t\t\t\t\t<height>{height}</height>\n')
                outfile.write(f'\t\t\t\t\t\t\t\t\t\t<anamorphic>{ana}</anamorphic>\n')
                outfile.write(f'\t\t\t\t\t\t\t\t\t\t<pixelaspectratio>{pixelar}</pixelaspectratio>\n')
                outfile.write('\t\t\t\t\t\t\t\t\t\t<fielddominance>none</fielddominance>\n')
                outfile.write('\t\t\t\t\t\t\t\t\t</samplecharacteristics>\n')
                outfile.write('\t\t\t\t\t\t\t\t</video>\n')
                outfile.write('\t\t\t\t\t\t\t\t<audio>\n')
                outfile.write('\t\t\t\t\t\t\t\t\t<samplecharacteristics>\n')
                outfile.write(f'\t\t\t\t\t\t\t\t\t\t<depth>{depth}</depth>\n')
                outfile.write(f'\t\t\t\t\t\t\t\t\t\t<samplerate>{sr}</samplerate>\n')
                outfile.write('\t\t\t\t\t\t\t\t\t</samplecharacteristics>\n')
                outfile.write('\t\t\t\t\t\t\t\t\t<channelcount>2</channelcount>\n')
                outfile.write('\t\t\t\t\t\t\t\t</audio>\n')
                outfile.write('\t\t\t\t\t\t\t</media>\n')
                outfile.write('\t\t\t\t\t\t</file>\n')
                for i in range(len(clips)):
                    outfile.write('\t\t\t\t\t\t<link>\n')
                    outfile.write(f'\t\t\t\t\t\t\t<linkclipref>clipitem-{(i*(len(clips)+1))+7}</linkclipref>\n')
                    outfile.write('\t\t\t\t\t\t\t<mediatype>video</mediatype>\n')
                    outfile.write('\t\t\t\t\t\t\t<trackindex>1</trackindex>\n')
                    outfile.write('\t\t\t\t\t\t\t<clipindex>1</clipindex>\n')
                    if(i != 1):
                        outfile.write('\t\t\t\t\t\t\t<groupindex>1</groupindex>\n')
                    outfile.write('\t\t\t\t\t\t</link>\n')
                outfile.write('\t\t\t\t\t</clipitem>\n')
            else:
                outfile.write(f'\t\t\t\t\t<clipitem id="clipitem-{j+7}">\n')
                outfile.write('\t\t\t\t\t\t<masterclipid>masterclip-2</masterclipid>\n')
                outfile.write(f'\t\t\t\t\t\t<name>{name}</name>\n')
                outfile.write(f'\t\t\t\t\t\t<start>{clip[0]}</start>\n')
                outfile.write(f'\t\t\t\t\t\t<end>{clip[1]}</end>\n')
                outfile.write(f'\t\t\t\t\t\t<in>212</in>\n')
                outfile.write(f'\t\t\t\t\t\t<out>427</out>\n')
                outfile.write(f'\t\t\t\t\t\t<alphatype>none</alphatype>\n')
                outfile.write(f'\t\t\t\t\t\t<file id="file-2"/>\n')
                for i in range(len(clips)):
                    outfile.write('\t\t\t\t\t\t<link>\n')
                    outfile.write(f'\t\t\t\t\t\t\t<linkclipref>clipitem-{(i*(len(clips)+1))+7+j}</linkclipref>\n')
                    outfile.write('\t\t\t\t\t\t\t<mediatype>video</mediatype>\n')
                    outfile.write('\t\t\t\t\t\t\t<trackindex>1</trackindex>\n')
                    outfile.write('\t\t\t\t\t\t\t<clipindex>1</clipindex>\n')
                    if(i != 1):
                        outfile.write('\t\t\t\t\t\t\t<groupindex>1</groupindex>\n')
                    outfile.write('\t\t\t\t\t\t</link>\n')
                outfile.write('\t\t\t\t\t</clipitem>\n')
        outfile.write('\t\t\t\t</track>\n')
        outfile.write('\t\t\t</video>\n')
        outfile.write('\t\t\t<audio>\n')
        outfile.write('\t\t\t\t<numOutputChannels>2</numOutputChannels>\n')
        outfile.write('\t\t\t\t<format>\n')
        outfile.write('\t\t\t\t\t<samplecharacteristics>\n')
        outfile.write(f'\t\t\t\t\t\t<depth>{depth}</depth>\n')
        outfile.write(f'\t\t\t\t\t\t<samplerate>{sr}</samplerate>\n')
        outfile.write('\t\t\t\t\t</samplecharacteristics>\n')
        outfile.write('\t\t\t\t</format>\n')
        outfile.write('\t\t\t\t\t<track PannerIsInverted="true" PannerStartKeyframe="-91445760000000000,0.5,0,0,0,0,0,0" PannerName="Balance" currentExplodedTrackIndex="0" totalExplodedTrackCount="2" premiereTrackType="Stereo">\n')

    return 'export.xml'
